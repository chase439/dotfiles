#!/usr/bin/env bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2
DOTFILES_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

sub_clean () {
  brew cleanup
  brew cask cleanup
  npm cache clean
  gem cleanup
  rvm cleanup all
}

sub_dock () {
  . "${DOTFILES_PATH}/macos/dock.sh" && echo "Dock reloaded."
}

sub_help () {
  echo "Usage: $BIN_NAME <command>"
  echo
  echo "Commands:"
  echo "   clean            Clean up caches (brew, npm, gem, rvm)"
  echo "   dock             Apply macOS Dock settings"
  echo "   help             Display this help message"
  echo "   macos            Apply MacOS system defaults"
  echo "   test             Run tests"
  echo "   update           Run MacOS softwareupdate"
  echo "   install          Add (force) sym links to \$HOME"
  echo "   uninstall        Remove sym links from \$HOME"
  echo "   install_pkgs     Install Brew, NPM, Bash, Gem and their packages"
}

sub_macos () {
  for DEFAULTS_FILE in "${DOTFILES_PATH}"/macos/defaults*.sh; do
    echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
  done
  echo "Done. Some changes may require a logout/restart to take effect."
}

sub_test () {
  if is-executable bats; then
    # Run tests
    bats "$DOTFILES_PATH"/test/*.bats
  else
    echo "Skipped: tests (missing: bats)"
  fi
}

sub_install_pkgs() {
  # Package managers & packages
  . "$DOTFILES_PATH/install/brew.sh"
  # . "$DOTFILES_PATH/install/npm.sh"
  # . "$DOTFILES_PATH/install/bash.sh"
  . "$DOTFILES_PATH/install/brew-cask.sh"
  . "$DOTFILES_PATH/install/gem.sh"
}

sub_update () {
  sudo softwareupdate -i -a
  # brew update
  # brew upgrade
  # npm install npm -g
  # npm update -g
  # gem update --system
  # gem update
}

sub_install() {
  # force creation of symlinks in $HOME regardless
  # of file existent, overwrite if needed
  ln -sfv $DOTFILES_PATH/runcom/.bash_profile ~
  ln -sfv $DOTFILES_PATH/runcom/.vimrc ~
  ln -sfv $DOTFILES_PATH/.vim ~
  ln -sfv $DOTFILES_PATH/runcom/.gitconfig ~
  ln -sfv $DOTFILES_PATH/runcom/.gitk ~  # OK: gitk will overwrite this sym link
  ln -sfv $DOTFILES_PATH/runcom/.screenrc ~

  cd $DOTFILES_PATH
  # Git checkout submodule's files
  git submodule update --init --recursive
  cd -
}

sub_uninstall() {
  # remove symlinks from user's $HOME
  unlink ~/.bash_profile
  unlink ~/.vimrc
  unlink ~/.vim
  unlink ~/.gitconfig
  unlink ~/.gitk
  unlink ~/.screenrc
}

case $COMMAND_NAME in
  "" | "-h" | "--help")
    sub_help
    ;;
  *)
    shift
    sub_${COMMAND_NAME} $@
    if [ $? = 127 ]; then
      echo "'$COMMAND_NAME' is not a known command or has errors." >&2
      sub_help
      exit 1
    fi
    ;;
esac
